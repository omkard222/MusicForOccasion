- url = (@profile.new_record? ? create_profile_path : profile_path)
- method = (@profile.new_record? ? "post" : "put")
= semantic_form_for @profile, url: url, method: method do |f|
  .space30
  = f.input :user_id, as: :hidden, :input_html => { :value => current_user ? current_user.id : @user.id }
  = f.input :profile_type, as: :hidden, :input_html => { :value => "#{(@type == 'musician') ? 1 : 0}".to_i }
  = f.input :id, as: :hidden
  = f.input :sub_type, as: :hidden, :input_html => { :value => params[:type] || @profile.sub_type } 
  - %w[x y w h].each do |attribute| 
    = f.hidden_field "crop_#{attribute}" 
  .row
    .col-md-6.profile_pic
      = f.input :profile_picture, input_html: { id: 'file' }
      = image_tag(@profile.picture, class: 'img-responsive ', id: 'image_profile')
      #fileUpload.div_upload_profile
        table
          tr
            td
              i.fa.fa-camera.fa-3x
            td.padding_left_15
              div= t('profiles.form_for_registered_user.update_picture')
      #fileUploadName
    .col-md-6.crop_pic
      .crop_heading *{style: 'display: none;'}
        h4 style="padding-top: 20px; color: #00b0ff" = "Crop Profile Picture"
      = image_tag("/images/plain.jpg",  id: 'cropbox', class: "cropbox", style: "width: auto; height: 250px;")
      br
      .crop_heading *{style: 'display: none;'}
        = link_to "Discard Image", "#", class: "cancel_crop btn"
  br
  = f.input :username
  = f.inputs :location, class: 'location'
  .row
    .col-sm-4
      h3= f.submit (@profile.new_record? ? 'Save' : 'Update profile'), class: 'btn btn-info btn-block btn-base'
      .space10                  
    - unless @profile.new_record?
      .col-sm-4
        h3= link_to t('profiles.form_for_registered_user.delete_profile'), profile_delete_profile_path(@profile), class: 'btn btn-danger btn-block btn-base'
        .space10
      .col-sm-4
        h3= link_to 'Cancel', profile_path(current_user.current_profile), class: 'btn btn-default btn-block btn-base'
        .space10
.space40

= render 'crop_js'